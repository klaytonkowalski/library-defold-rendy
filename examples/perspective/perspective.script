--------------------------------------------------------------------------------
-- License
--------------------------------------------------------------------------------

-- Copyright (c) 2024 Klayton Kowalski

-- This software is provided 'as-is', without any express or implied warranty.
-- In no event will the authors be held liable for any damages arising from the use of this software.

-- Permission is granted to anyone to use this software for any purpose,
-- including commercial applications, and to alter it and redistribute it freely,
-- subject to the following restrictions:

-- 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software.
--    If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.

-- 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.

-- 3. This notice may not be removed or altered from any source distribution.

--------------------------------------------------------------------------------
-- Information
--------------------------------------------------------------------------------

-- GitHub: https://github.com/whiteboxdev/library-defold-rendy

--------------------------------------------------------------------------------
-- Dependencies
--------------------------------------------------------------------------------

local rendy = require "rendy.rendy"

--------------------------------------------------------------------------------
-- Constants
--------------------------------------------------------------------------------

local message_acquire_input_focus = hash("acquire_input_focus")

local key_1 = hash("key_1")
local key_2 = hash("key_2")
local key_3 = hash("key_3")
local key_4 = hash("key_4")
local key_backspace = hash("key_backspace")
local key_esc = hash("key_esc")

local id_logo = hash("/logo")
local id_rendy = hash("/rendy")

--------------------------------------------------------------------------------
-- Engine Functions
--------------------------------------------------------------------------------

function init()
	window.set_mouse_lock(true)
	go.animate(id_logo, "euler.x", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
	go.animate(id_logo, "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
	go.animate(id_logo, "euler.z", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
	msg.post(msg.url(), message_acquire_input_focus)
end

function update()
	local camera_position = go.get_position(id_rendy)
	go.set(msg.url(nil, id_logo, "model"), "light", vmath.vector4(camera_position.x, camera_position.y, camera_position.z, 0))
end

function on_input(_, action_id, action)
	if action.pressed then
		if action_id == key_1 then
			rendy.set(id_rendy, "resize_mode_center", true)
		elseif action_id == key_2 then
			rendy.set(id_rendy, "resize_mode_expand", true)
		elseif action_id == key_3 then
			rendy.set(id_rendy, "resize_mode_stretch", true)
		elseif action_id == key_4 then
			rendy.shake(id_rendy, 0.5, 5, 0.5, 0.75)
		elseif action_id == key_backspace then
			window.set_mouse_lock(not window.get_mouse_lock())
		elseif action_id == key_esc then
			sys.exit(0)
		end
	end
end